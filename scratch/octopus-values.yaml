octopus:
  ingress:
    enabled: true
    spec:
      ingressClassName: ingress-nginx
    path: /
    hosts:
      - octopus.prod
  acceptEula: "Y" # It is required to accept the Octopus EULA https://octopus.com/legal/customer-agreement
  masterKey: $(cat octopus-master-key) # <generated master key - base64> 
  # Server=tcp:127.0.0.1,5432;Initial Catalog=OctopusDeploy;Persist Security Info=False;User ID=octopus-deploy;Password=h0Sf2rNAjk;Encrypt=True;Connection Timeout=30;
  databaseConnectionString: "Server=tcp:127.0.0.1,5432;Initial Catalog=OctopusDeploy;Persist Security Info=False;User ID=octopus-deploy;Password=h0Sf2rNAjk;Encrypt=True;Connection Timeout=30;" # Server=tcp:octopus-deploy.database.windows.net,1433;Initial Catalog=OctopusDeploy;Persist Security Info=False;User ID=octopus-deploy;Password={your_password};Encrypt=True;Connection Timeout=30;
  # add license key
  # licenseKeyBase64: <your base64 encoded license key>   
  username: admin
  password: password
  packageRepositoryVolume:
    size: 20Gi 
    storageAccessMode: ReadWriteOnce
  artifactVolume:
    size: 1Gi 
    storageAccessMode: ReadWriteOnce
  taskLogVolume: 
    size: 1Gi 
    storageAccessMode: ReadWriteOnce
  serviceAccount:
    create: false # change in production
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the fullname template
    name: name
    ## Service Account annotations
    annotations: {}
    automountServiceAccountToken: false
    rbac:
      create: false
      role:
        ## Rules to create. It follows the role specification
        rules:
          - apiGroups:
              - ''
            resources:
              - services
              - endpoints
              - pods
            verbs:
              - get
              - watch
              - list